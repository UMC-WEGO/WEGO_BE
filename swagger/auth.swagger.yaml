openapi: 3.0.0
info:
  title: AUTH 관련 API
  version: 1.0.0

paths:
  /auth/signUp:
    post:
      tags:
        - AUTH
      summary: 회원가입
      parameters:
        - name: signUp
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: 가입하려는 이메일
                example: test@example.com
              password:
                type: string
                description: 가입 비밀번호
                example: 1234
              marketingConsent:
                type: boolean
                description: 약관 동의 여부(마케팅 활용)
                example: true
              infoConsent:
                type: boolean
                description: 약관 동의 여부(마케팅 정보 수신)
                example: true
              nickname:
                type: string
                description: 사용자 닉네임
                example: user123
      responses:
        "200":
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 회원가입 성공
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 잘못된 요청입니다.

  /auth/nickname-check:
    post:
      tags:
        - AUTH
      summary: 닉네임 중복 검사
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: object
            properties:
              nickname:
                type: string
                description: 확인하려는 닉네임
                example: wego
      responses:
        "200":
          description: 사용 가능한 닉네임
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 사용가능한 닉네임입니다.
        "409":
          description: 닉네임 중복
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 409
                  message:
                    type: string
                    example: 이미 사용 중인 닉네임입니다.
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 잘못된 요청입니다.
                    
  /auth/login:
    post:
      tags:
        - AUTH
      summary: 로그인
      parameters:
        - name: email
          in: body
          required: true
          schema:
            type: object
            properties:
              email:
                type: string
                description: 로그인할 이메일 (아이디)
                example: test@example.com
        - name: password
          in: body
          required: true
          schema:
            type: object
            properties:
              password:
                type: string
                description: 로그인 비밀번호
                example: 1234
      responses:
        "200":
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 로그인 성공
                  result:
                    type: object
                    properties:
                      refreshToken:
                        type: string
                        description: 리프레시 토큰
                        example: your-refresh-token
        "401":
          description: 인증 실패 (잘못된 이메일 또는 비밀번호)
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: 잘못된 이메일 또는 비밀번호입니다.
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 잘못된 요청입니다.

  /auth/refresh:
    post:
      tags:
        - AUTH
      summary: 토큰 재발급
      requestBody:
        description: 리프레시 토큰을 포함한 요청 본문
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
                  description: "리프레시 토큰"
      responses:
        "200":
          description: 토큰 재발급 성공
          headers:
            Authorization:
              description: "새로 발급된 액세스 토큰을 포함한 Authorization 헤더"
              schema:
                type: string
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: true
                  code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 토큰 재발급 성공
                  result:
                    type: object
                    properties:
                      refreshToken:
                        type: string
                        example: "RefreshToken"
        "400":
          description: 잘못된 요청
          content:
            application/json:
              schema:
                type: object
                properties:
                  isSuccess:
                    type: boolean
                    example: false
                  code:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: 잘못된 요청입니다.